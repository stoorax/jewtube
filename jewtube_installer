# JewTube Installer (Fixed Version Check)
# Ausführung mit: iwr https://raw.githubusercontent.com/stoorax/jewtube/main/jewtube_installer | iex

$logFile = "$env:TEMP\JewTube_Install_$(Get-Date -Format 'yyyyMMdd_HHmmss').log"
Start-Transcript -Path $logFile -Append | Out-Null

function Get-RealPython {
    $paths = @(
        "$env:LocalAppData\Programs\Python\Python311\python.exe",
        "C:\Program Files\Python311\python.exe"
    )
    foreach ($path in $paths) {
        if (Test-Path $path) { return $path }
    }
    return $null
}

# Admin-Check
$adminCheck = [Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()
if (-NOT $adminCheck.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    $scriptUrl = "https://raw.githubusercontent.com/stoorax/jewtube/main/jewtube_installer"
    Stop-Transcript | Out-Null
    Start-Process powershell -Verb RunAs -ArgumentList "-NoExit -Command `"irm '$scriptUrl' | iex`""
    exit
}

Write-Host "=== JewTube Installation ==="
Write-Host "Logfile: $logFile`n"

try {
    # Python-Suche
    $pythonExe = Get-RealPython
    if (-not $pythonExe) {
        Write-Host "[ERROR] Python not found!" -ForegroundColor Red
        throw "Python installation missing"
    }

    # Paketinstallation
    $packages = @("yt-dlp", "ytmusicapi", "browser-cookie3")
    foreach ($pkg in $packages) {
        Write-Host "[INSTALL] $pkg" -ForegroundColor Cyan
        & $pythonExe -m pip install --upgrade $pkg --disable-pip-version-check
    }

    # Korrigierte Versionsprüfung
    Write-Host "`n[VERSION CHECK]" -ForegroundColor Green
    
    # yt-dlp mit neuer Methode
    $ytdlpVersion = & $pythonExe -c "import yt_dlp; print(yt_dlp.version.__version__)" 2>&1
    Write-Host "yt-dlp: $ytdlpVersion"
    
    # ytmusicapi (funktioniert)
    $ytmusicVersion = & $pythonExe -c "import ytmusicapi; print(ytmusicapi.__version__)" 2>&1
    Write-Host "ytmusicapi: $ytmusicVersion"
    
    # Funktionstest
    Write-Host "`n[FUNCTIONAL TEST]" -ForegroundColor Green
    & $pythonExe -c "from yt_dlp import YoutubeDL; print('YoutubeDL import successful')" 2>&1

    Write-Host "`n[SUCCESS] All components installed correctly!" -ForegroundColor Green
}
catch {
    Write-Host "`n[ERROR] $_" -ForegroundColor Red
}
finally {
    Write-Host "`n=== Logfile ==="
    Write-Host $logFile
    Stop-Transcript | Out-Null
}
