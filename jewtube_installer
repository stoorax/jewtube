# jewtube_installer.ps1

Clear-Host
Write-Host "===============================" -ForegroundColor Cyan
Write-Host "  JEWTUBE ENVIRONMENT INSTALLER " -ForegroundColor Cyan
Write-Host "===============================" -ForegroundColor Cyan
Write-Host ""
Write-Host "This script will check and install all required components:" -ForegroundColor White
Write-Host " - Python 3.8+"
Write-Host " - pip"
Write-Host " - yt-dlp"
Write-Host " - ytmusicapi"
Write-Host " - browser_cookie3" -ForegroundColor Yellow
Write-Host ""
Pause

# Helper functions
function Write-WarningColor($msg) { Write-Host "WARNING: $msg" -ForegroundColor Red }
function Write-SuccessColor($msg) { Write-Host "SUCCESS: $msg" -ForegroundColor Green }
function Write-Info($msg)    { Write-Host $msg -ForegroundColor White }

# Check Winget
$wingetCmd = Get-Command winget -ErrorAction SilentlyContinue
if ($null -eq $wingetCmd) {
    Write-WarningColor "Winget not found! Cannot auto-install Python. Install manually and re-run this script."
    Pause
    exit 1
}

# Check Python
Write-Info "Checking for Python installation..."
$pythonCmd = Get-Command python -ErrorAction SilentlyContinue
if ($null -eq $pythonCmd) {
    Write-WarningColor "Python not found! Installing via winget now..."
    Pause
    winget install --id Python.Python.3 --source winget --silent --accept-source-agreements --accept-package-agreements
    Write-Info "Waiting for Python install to finish..."
    Start-Sleep -Seconds 10
} else {
    Write-SuccessColor "Python found: $(python --version)"
}

# Reload PATH for this session
$env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine")

# Check pip
$pipCmd = Get-Command pip -ErrorAction SilentlyContinue
if ($null -eq $pipCmd) {
    Write-Info "Ensuring pip is installed..."
    python -m ensurepip --upgrade
} else {
    Write-SuccessColor "Pip found: $(pip --version)"
}

# Upgrade pip
Write-Info "Upgrading pip to latest version..."
python -m pip install --upgrade pip

# Required packages
$packages = @("yt-dlp", "ytmusicapi", "browser_cookie3")
Write-Info "Installing required Python packages: $($packages -join ', ') ..."
Pause
python -m pip install --upgrade $packages

# Final checks
function Check-PythonModule($module) {
    python -c "import $module" 2>$null
    return $LASTEXITCODE -eq 0
}

$errors = 0
foreach ($pkg in @("ytmusicapi", "browser_cookie3")) {
    if (Check-PythonModule $pkg) {
        Write-SuccessColor "$pkg installed successfully."
    } else {
        Write-WarningColor "$pkg NOT installed."
        $errors++
    }
}

try {
    $ytDlpVersion = yt-dlp --version 2>&1
    Write-SuccessColor "yt-dlp installed successfully: Version $ytDlpVersion"
} catch {
    Write-WarningColor "yt-dlp NOT installed."
    $errors++
}

if ($errors -eq 0) {
    Write-Host ""
    Write-SuccessColor "All dependencies installed successfully. Environment is ready for Jewtube."
} else {
    Write-Host ""
    Write-WarningColor "Some components failed to install. Please check manually before using Jewtube."
}

Write-Host ""
Write-Host "=== Installer completed ===" -ForegroundColor Cyan
Pause
