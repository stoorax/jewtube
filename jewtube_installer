# JewTube Installer (Finale Korrektur)
# Ausf√ºhrung mit: iwr https://raw.githubusercontent.com/stoorax/jewtube/main/jewtube_installer | iex

function Get-RealPython {
    $possiblePaths = @(
        "$env:LocalAppData\Programs\Python\Python311\python.exe",
        "C:\Program Files\Python311\python.exe"
    )
    foreach ($path in $possiblePaths) {
        if (Test-Path $path) { return $path }
    }
    return $null
}

function Install-PythonWithWinget {
    Write-Host "Installiere Python mit winget..." -ForegroundColor Cyan
    winget install --id Python.Python.3.11 --exact --accept-source-agreements --accept-package-agreements --silent
    
    # Aktualisiere PATH
    $env:Path = [System.Environment]::GetEnvironmentVariable("Path", "Machine") + ";" + 
                [System.Environment]::GetEnvironmentVariable("Path", "User")
    
    return Get-RealPython
}

function Write-Step {
    param($step, $message)
    Write-Host "`n=====[ SCHRITT $step ]=====" -ForegroundColor Magenta
    Write-Host $message -ForegroundColor Cyan
}

# Admin-Check
$adminCheck = [Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()
if (-NOT $adminCheck.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) {
    $scriptUrl = "https://raw.githubusercontent.com/stoorax/jewtube/main/jewtube_installer"
    Start-Process powershell -Verb RunAs -ArgumentList "-NoExit -Command `"irm '$scriptUrl' | iex`""
    exit
}

### HAUPTPROGRAMM ###
try {
    # 1. Winget
    Write-Step -step 1 -message "√úberpr√ºfe winget"
    if (-not (Get-Command winget -ErrorAction SilentlyContinue)) {
        Write-Host "Installiere winget..." -ForegroundColor Yellow
        $progressPreference = 'silentlyContinue'
        irm https://aka.ms/getwinget -OutFile winget.msixbundle -UseBasicParsing
        Add-AppxPackage -Path winget.msixbundle
        Remove-Item winget.msixbundle -ErrorAction SilentlyContinue
    }

    # 2. Python
    Write-Step -step 2 -message "√úberpr√ºfe Python 3.11"
    $pythonExe = Get-RealPython
    
    if (-not $pythonExe) {
        Write-Host "Python nicht gefunden, installiere..." -ForegroundColor Yellow
        $pythonExe = Install-PythonWithWinget
        if (-not $pythonExe) { throw "Python installiert aber nicht gefunden" }
        Write-Host "‚úÖ Python installiert" -ForegroundColor Green
    }
    else {
        $version = & $pythonExe --version 2>&1
        Write-Host "Python gefunden: $pythonExe" -ForegroundColor Green
        Write-Host "Version: $version" -ForegroundColor Green
    }

    # 3. Pakete installieren
    Write-Step -step 3 -message "Installiere ben√∂tigte Pakete"
    $packages = @("yt-dlp", "ytmusicapi", "browser-cookie3")
    
    foreach ($pkg in $packages) {
        Write-Host "`nüîÑ Installiere $pkg..." -ForegroundColor Blue
        
        # Korrigierte Syntax ohne Anf√ºhrungszeichen
        & $pythonExe -m pip install --upgrade $pkg --disable-pip-version-check
        
        # Verifikation
        $pkgName = $pkg.Replace('-', '_')
        $testResult = & $pythonExe -c "import $pkgName; print('‚úÖ Erfolgreich')" 2>&1
        Write-Host $testResult -ForegroundColor Green
    }

    # 4. Abschluss
    Write-Step -step 4 -message "Installation abgeschlossen"
    Write-Host "`nüéâ JEWTUBE ERFOLGREICH INSTALLIERT" -ForegroundColor Green
    Write-Host "yt-dlp Version: $(& $pythonExe -c 'import yt_dlp; print(yt_dlp.__version__)' 2>&1)" -ForegroundColor Cyan
    Write-Host "`nVerwendung: $pythonExe -m yt_dlp [URL]" -ForegroundColor Yellow
}
catch {
    Write-Host "`n‚ùå FEHLER: $_" -ForegroundColor Red
    $errorOccurred = $true
}

# Warte auf Benutzereingabe
Write-Host "`nDr√ºcken Sie ENTER zum Beenden..." -ForegroundColor Yellow
[void][System.Console]::ReadLine()
